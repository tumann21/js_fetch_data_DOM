{"version":3,"sources":["scripts/main.js"],"names":["url","url1","body","document","querySelector","ol","createElement","getPhones","fetch","then","response","ok","setTimeout","Promise","reject","Error","json","result","ph","map","el","getPhonesDetails","id","all","res","forEach","element","li","append","name","catch","error","substring","indexOf"],"mappings":";AAAA,aA+CS,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5CT,IAAMA,EACF,wEAEAC,EACA,iFAGEC,EAAOC,SAASC,cAAc,QAC9BC,EAAKF,SAASG,cAAc,MAElC,SAASC,IACAC,OAAAA,MAAMR,GACVS,KAAK,SAAAC,GAKGA,OAJFA,EAASC,IACZC,WAAW,WAAMC,OAAAA,QAAQC,OAAOC,MAAM,WAAW,KAG5CL,EAASM,SAEjBP,KAAK,SAAAQ,GACEC,IAAAA,EAAKD,EAAOE,IAAI,SAAAC,GACpBC,OAAAA,EAAiBD,EAAGE,MAEtBT,QAAQU,IAAQL,EAAAA,IACbT,KAAK,SAAAe,GAAOA,OAAAA,EAAIC,QAAQ,SAAAC,GACjBC,IAAAA,EAAKxB,SAASG,cAAc,MAElCqB,EAAGC,OAAOF,EAAQG,MAClBxB,EAAGuB,OAAOD,MAGZzB,EAAK0B,OAAOvB,MAOpB,SAASgB,EAAiBC,GACjBd,OAAAA,MAASP,GAAAA,OAAAA,GAAOqB,OAAAA,EAAhB,UACJb,KAAK,SAAAC,GAAYA,OAAAA,EAASM,SAC1Bc,MAAM,SAAAC,GAAS,OAAA,IAAIhB,MAAMgB,KAL9B9B,EAAOA,EAAK+B,UAAU,EAAG/B,EAAKgC,QAAQ,aAQtC1B","file":"main.28330576.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\nconst url\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nlet url1\n  = 'https://mate-academy.github.io/'\n   + 'phone-catalogue-static/api/phones/:phoneId.json';\n\nconst body = document.querySelector('body');\nconst ol = document.createElement('ol');\n\nfunction getPhones() {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        setTimeout(() => Promise.reject(Error('error')), 5000);\n      }\n\n      return response.json();\n    })\n    .then(result => {\n      const ph = result.map(el =>\n        getPhonesDetails(el.id));\n\n      Promise.all([...ph])\n        .then(res => res.forEach(element => {\n          const li = document.createElement('li');\n\n          li.append(element.name);\n          ol.append(li);\n        }),\n\n        body.append(ol),\n        );\n    });\n}\n\nurl1 = url1.substring(0, url1.indexOf(':phoneId'));\n\nfunction getPhonesDetails(id) {\n  return fetch(`${url1}${id}.json`)\n    .then(response => response.json())\n    .catch(error => new Error(error));\n}\n\ngetPhones();\n"]}